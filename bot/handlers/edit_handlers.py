from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery

from bot.data_bases.fsm import IdeaState, DescripState, CityState, FullNameState, NumberState
from bot.data_bases.order import db_order

from bot.keyboards.edit_kbs import edit_budget_kb, edit_choise_kb, get_data_kb, material_edit_kb, edit_country_kb, \
    edit_russia_delivery_kb
from bot.keyboards.user_kbs import confirm_order_kb, back2_to_menu_kb, edit_order_delivery_kb, edit_order_param_kb, \
    edit_order_kb

router = Router()

# Edit order
@router.callback_query(F.data == "edit_order")
async def edit_order(callback: CallbackQuery) -> None:
    row = await db_order.get_order_row(callback.from_user.id)
    if row[11] is None and row[6] is not None:
        await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å",
                                      reply_markup=await edit_order_kb(callback.from_user.id))
    else:
        await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å",
                     reply_markup=await edit_order_kb(callback.from_user.id))
    await callback.answer()

@router.callback_query(F.data == "param_edit")
async def edit_order(callback: CallbackQuery) -> None:
    await callback.message.delete()
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å",
                     reply_markup=edit_order_param_kb())
    await callback.answer()

@router.callback_query(F.data == "delivery_edit")
async def edit_order(callback: CallbackQuery) -> None:
    await callback.message.delete()
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å",
                     reply_markup=edit_order_delivery_kb())
    await callback.answer()

# Edit budget
@router.callback_query(F.data == "budget_edit")
async def edit_budget(callback: CallbackQuery) -> None:
    await callback.message.answer("–ö–∞–∫–æ–π –≤–∞—à –ø—Ä–∏–º–µ—Ä–Ω—ã–π –±—é–¥–∂–µ—Ç?", reply_markup=edit_budget_kb())
    await callback.answer()

@router.callback_query(F.data == "sum_13_edit")
async def price_13_edit(callback: CallbackQuery) -> None:
    await db_order.add_budget_db(callback.from_user.id, "1.5 - 3.5 —Ç—ã—Å. —Ä—É–±.")
    await callback.message.answer("<b>1.5 - 3.5 —Ç—ã—Å. —Ä—É–±.*</b>\n\n"
                                  "‚ú®–ª—é–±—ã–µ –∑–Ω–∞—á–∫–∏ 1.5 —Ç—ã—Å.\n"
                                  "‚ú®—à–æ–ø–ø–µ—Ä—ã —Å –Ω–∞–¥–ø–∏—Å—è–º–∏/–º–∞–ª–µ–Ω—å–∫–∏–º–∏ –ø—Ä–æ—Å—Ç—ã–º–∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è–º–∏ 2 - 3.5 —Ç—ã—Å.\n\n"
                                  "* –∏–∑–¥–µ–ª–∏–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å", reply_markup=edit_choise_kb())
    await callback.answer()

@router.callback_query(F.data == "sum_35_edit")
async def price_35_edit(callback: CallbackQuery) -> None:
    await db_order.add_budget_db(callback.from_user.id, "3.5 - 5 —Ç—ã—Å. —Ä—É–±.")
    await callback.message.answer("<b>3.5 - 5 —Ç—ã—Å. —Ä—É–±.*</b>\n\n"
                                  "‚ú®—à–æ–ø–ø–µ—Ä—ã —Å –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è–º–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö(–æ–¥–Ω–æ–≥–æ), –±–µ–∑ —Ñ–æ–Ω–∞, –æ—Ç 3.5 —Ç—ã—Å\n"
                                  "‚ú®—à–æ–ø–ø–µ—Ä—ã —Å –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è–º–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö(2 –∏ –±–æ–ª—å—à–µ), –±–µ–∑ —Ñ–æ–Ω–∞, –æ—Ç 4 —Ç—ã—Å \n"
                                  "‚ú®—à–æ–ø–ø–µ—Ä—ã —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏ —Å —Ñ–æ–Ω–æ–º, –æ—Ç 4 —Ç—ã—Å\n"
                                  "‚ú®—Ñ—É—Ç–±–æ–ª–∫–∏ —Å –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è–º–∏ 1-2 –∂–∏–≤–æ—Ç–Ω—ã—Ö, ~5 —Ç—ã—Å\n"
                                  "‚ú®–∫–∞—Ä—Ç–∏–Ω—ã —Ä–∞–∑–º–µ—Ä–æ–º ~20—Ö20 —Å–º, —Å –æ–¥–Ω–æ—Ç–æ–Ω–Ω—ã–º —Ñ–æ–Ω–æ–º\n\n"
                                  "üê•–≤—Å–µ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –¥—Ä—É–≥—É—é —Ç–µ–º–∞—Ç–∏–∫—É —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ "
                                  "–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –≤—ã–±–∏—Ä–∞–π—Ç–µ –ø—Ä–æ—Å—Ç–æ –ø–æ —Å–≤–æ–µ–º—É –±—é–¥–∂–µ—Ç—É(—Ç–∞–∫–∂–µ —Å–º. —Ä–∞–∑–¥–µ–ª ¬´–æ—Ç 5—Ç—ã—Å.¬ª)\n\n"
                                  "* –∏–∑–¥–µ–ª–∏–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å", reply_markup=edit_choise_kb())
    await callback.answer()

@router.callback_query(F.data == "sum_5_edit")
async def price_5_edit(callback: CallbackQuery) -> None:
    await db_order.add_budget_db(callback.from_user.id, "–æ—Ç 5 —Ç—ã—Å. —Ä—É–±.")
    await callback.message.answer("<b>–æ—Ç 5 —Ç—ã—Å. —Ä—É–±.*</b>\n\n"
                                  "‚ú®—Ä–æ—Å–ø–∏—Å–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ª—é–¥–µ–π –Ω–∞ –ª—é–±–æ–º –∏–∑–¥–µ–ª–∏–∏\n"
                                  "‚ú®—à–æ–ø–ø–µ—Ä—ã —Å –æ—á–µ–Ω—å –±–æ–ª—å—à–∏–º–∏ –∏ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è–º–∏\n"
                                  "‚ú®—Ñ—É—Ç–±–æ–ª–∫–∏ —Å –±–æ–ª—å—à–∏–º–∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è–º–∏/—Å–ª–æ–∂–Ω–æ–π –∏–¥–µ–µ–π/–¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ñ–æ–Ω–æ–º\n"
                                  "‚ú®—Ö—É–¥–∏ –∏ —Å–≤–∏—Ç—à–æ—Ç—ã —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è–º–∏ –æ—Ç 5 —Ç—ã—Å. / —Å–æ —Å–ª–æ–∂–Ω—ã–º–∏ –æ—Ç 6.5 —Ç—ã—Å.\n"
                                  "‚ú®–∫–∞—Ä—Ç–∏–Ω—ã —Ä–∞–∑–º–µ—Ä–æ–º –æ—Ç 30 —Å–º\n\n"
                                  "* –∏–∑–¥–µ–ª–∏–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å", reply_markup=edit_choise_kb())
    await callback.answer()

@router.callback_query(F.data == "yes_edit")
async def confirm_price_edit(callback: CallbackQuery) -> None:
    await callback.message.answer("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã!", reply_markup=get_data_kb())
    await callback.answer()

@router.callback_query(F.data == "other_prices_edit")
async def other_prices_edit(callback: CallbackQuery) -> None:
    await callback.message.edit_reply_markup(reply_markup=edit_budget_kb())
    await callback.answer()

@router.callback_query(F.data == "go_to_order")
async def other_prices(callback: CallbackQuery) -> None:
    row = await db_order.get_order_row(callback.from_user.id)
    if row[11] is not None and row[6] is None:
        await callback.message.answer(f"<b>–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π —Ç–æ–≤–∞—Ä</b>\n"
                                      f"–ù–∞–∑–≤–∞–Ω–∏–µ: {row[11]}\n"
                                      f"–¶–µ–Ω–∞: {row[2]}\n"
                                      f"–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: {row[8]}\n", reply_markup=confirm_order_kb())
    elif row[6] is None and row[11] is None:
        await callback.message.answer(f"<b>–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</b>\n"
                                      f"–ë—é–¥–∂–µ—Ç: {row[2]}\n"
                                      f"–ò–¥–µ—è: {row[3]}\n"
                                      f"–¢–∏–ø –∏–∑–¥–µ–ª–∏—è: {row[4]}\n"
                                      f"–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–∑–¥–µ–ª–∏—è: {row[5]}\n"
                                      f"–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: {row[8]}\n", reply_markup=confirm_order_kb())
    elif row[11] is None and row[6] is not None:
        await callback.message.answer(f"<b>–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</b>\n"
                                        f"–ë—é–¥–∂–µ—Ç: {row[2]}\n"
                                        f"–ò–¥–µ—è: {row[3]}\n"
                                        f"–¢–∏–ø –∏–∑–¥–µ–ª–∏—è: {row[4]}\n"
                                        f"–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–∑–¥–µ–ª–∏—è: {row[5]}\n\n"
                                        f"<b>–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏</b>\n"
                                        f"–§–ò–û: {row[6]}\n"
                                        f"–ê–¥—Ä–µ—Å: {row[7]}, {row[8]}\n"
                                        f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {row[10]}\n"
                                        f"–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: {row[9]}", reply_markup=confirm_order_kb())
    else:
        await callback.message.answer(f"<b>–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π —Ç–æ–≤–∞—Ä</b>\n"
                                      f"–ù–∞–∑–≤–∞–Ω–∏–µ: {row[11]}\n"
                                      f"–¶–µ–Ω–∞: {row[2]}\n\n"
                         f"<b>–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏</b>\n"
                                        f"–§–ò–û: {row[6]}\n"
                                        f"–ê–¥—Ä–µ—Å: {row[7]}, {row[8]}\n"
                                        f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {row[10]}\n"
                                        f"–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: {row[9]}", reply_markup=confirm_order_kb())
    await callback.answer()

# Edit idea
@router.callback_query(F.data == "idea_edit")
async def edit_budget(callback: CallbackQuery, state: FSMContext) -> None:
    await state.set_state(IdeaState.edit)
    await callback.message.answer("–û–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ –∏–¥–µ—é –≤–∞—à–µ–≥–æ –¥–∏–∑–∞–π–Ω–∞ –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏",
                                  reply_markup=back2_to_menu_kb())
    await callback.answer()

# Edit material
@router.callback_query(F.data == "material_edit")
async def edit_budget(callback: CallbackQuery) -> None:
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–¥–µ–ª–∏–µ", reply_markup=material_edit_kb())
    await callback.answer()

@router.callback_query(F.data == "shopper_edit")
async def material_shopper(callback: CallbackQuery, state: FSMContext) -> None:
    await db_order.add_material_db(callback.from_user.id, "–®–æ–ø–ø–µ—Ä")
    await state.set_state(DescripState.edit)
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –æ–±—ã—á–Ω—ã–π –∏–ª–∏ –Ω–∞ –º–æ–ª–Ω–∏–∏, –∏ –∂–µ–ª–∞–µ–º—ã–π —Ü–≤–µ—Ç –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ üå∏", reply_markup=back2_to_menu_kb())
    await callback.answer()

@router.callback_query(F.data == "tshirt_edit")
async def material_tshirt(callback: CallbackQuery, state: FSMContext) -> None:
    await db_order.add_material_db(callback.from_user.id, "–§—É—Ç–±–æ–ª–∫–∞")
    await state.set_state(DescripState.edit)
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ –º—É–∂—Å–∫–æ–µ/–∂–µ–Ω—Å–∫–æ–µ, —Ü–≤–µ—Ç(–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ) –∏ —Ä–∞–∑–º–µ—Ä. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ, —è –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –ª–∏—á–Ω–æ ‚òÄ", reply_markup=back2_to_menu_kb())
    await callback.answer()

@router.callback_query(F.data == "hoodie_edit")
async def material_hoodie(callback: CallbackQuery, state: FSMContext) -> None:
    await db_order.add_material_db(callback.from_user.id, "–•—É–¥–∏")
    await state.set_state(DescripState.edit)
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ –º—É–∂—Å–∫–æ–µ/–∂–µ–Ω—Å–∫–æ–µ, —Ü–≤–µ—Ç(–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ) –∏ —Ä–∞–∑–º–µ—Ä. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ, —è –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –ª–∏—á–Ω–æ ‚òÄ", reply_markup=back2_to_menu_kb())
    await callback.answer()

@router.callback_query(F.data == "sweatshirt_edit")
async def material_sweatshirt(callback: CallbackQuery, state: FSMContext) -> None:
    await db_order.add_material_db(callback.from_user.id, "–°–≤–∏—Ç—à–æ—Ç")
    await state.set_state(DescripState.edit)
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ –º—É–∂—Å–∫–æ–µ/–∂–µ–Ω—Å–∫–æ–µ, —Ü–≤–µ—Ç(–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ) –∏ —Ä–∞–∑–º–µ—Ä. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ, —è –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –ª–∏—á–Ω–æ ‚òÄ", reply_markup=back2_to_menu_kb())
    await callback.answer()

@router.callback_query(F.data == "picture_edit")
async def material_picture(callback: CallbackQuery, state: FSMContext) -> None:
    await db_order.add_material_db(callback.from_user.id, "–ö–∞—Ä—Ç–∏–Ω–∞")
    await state.set_state(DescripState.edit)
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç–∏–Ω—ã. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ, —è –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –ª–∏—á–Ω–æ üå∏", reply_markup=back2_to_menu_kb())
    await callback.answer()

@router.callback_query(F.data == "badge_edit")
async def material_badge(callback: CallbackQuery, state: FSMContext) -> None:
    await db_order.add_material_db(callback.from_user.id, "–ó–Ω–∞—á–æ–∫")
    await state.set_state(DescripState.edit)
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ –∫–∞–∫–∏–º –ª–∞–∫–æ–º –ø–æ–∫—Ä—ã–≤–∞—Ç—å –∑–Ω–∞—á–æ–∫:\n"
                                        "<b>–≥–ª—è–Ω—Ü–µ–≤—ã–º</b> (—Ü–≤–µ—Ç–∞ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —è—Ä—á–µ, –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –æ—Ç—Ä–∞–∂–∞—é—â–µ–π)\n"
                                        "<b>–º–∞—Ç–æ–≤—ã–º</b> (–≤–∏–∑—É–∞–ª—å–Ω–æ –Ω–∏–∫–∞–∫ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è, –ø—Ä–æ—Å—Ç–æ –∫–∞–∫ –∑–∞—â–∏—Ç–Ω—ã–π —Å–ª–æ–π)\n"
                                        "–ª–∏–±–æ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ –ø–æ–∫–∞ <b>–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å</b>",
                                        reply_markup=back2_to_menu_kb())
    await callback.answer()

# Desc edit
@router.callback_query(F.data == "description_edit")
async def edit_budget(callback: CallbackQuery, state: FSMContext) -> None:
    row = await db_order.get_order_row(callback.from_user.id)
    if row[4] == "–®–æ–ø–ø–µ—Ä":
        await db_order.add_material_db(callback.from_user.id, "–®–æ–ø–ø–µ—Ä")
        await state.set_state(DescripState.edit)
        await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –æ–±—ã—á–Ω—ã–π –∏–ª–∏ –Ω–∞ –º–æ–ª–Ω–∏–∏, –∏ –∂–µ–ª–∞–µ–º—ã–π —Ü–≤–µ—Ç –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ üå∏",
                                            reply_markup=back2_to_menu_kb())
    elif row[4] == "–§—É—Ç–±–æ–ª–∫–∞":
        await db_order.add_material_db(callback.from_user.id, "–§—É—Ç–±–æ–ª–∫–∞")
        await state.set_state(DescripState.edit)
        await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ –º—É–∂—Å–∫–æ–µ/–∂–µ–Ω—Å–∫–æ–µ, —Ü–≤–µ—Ç(–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ) –∏ —Ä–∞–∑–º–µ—Ä. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ, —è –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –ª–∏—á–Ω–æ ‚òÄ",
                                            reply_markup=back2_to_menu_kb())
    elif row[4] == "–°–≤–∏—Ç—à–æ—Ç":
        await db_order.add_material_db(callback.from_user.id, "–°–≤–∏—Ç—à–æ—Ç")
        await state.set_state(DescripState.edit)
        await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ –º—É–∂—Å–∫–æ–µ/–∂–µ–Ω—Å–∫–æ–µ, —Ü–≤–µ—Ç(–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ) –∏ —Ä–∞–∑–º–µ—Ä. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ, —è –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –ª–∏—á–Ω–æ ‚òÄ",
                                            reply_markup=back2_to_menu_kb())
    elif row[4] == "–•—É–¥–∏":
        await db_order.add_material_db(callback.from_user.id, "–•—É–¥–∏")
        await state.set_state(DescripState.edit)
        await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ –º—É–∂—Å–∫–æ–µ/–∂–µ–Ω—Å–∫–æ–µ, —Ü–≤–µ—Ç(–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ) –∏ —Ä–∞–∑–º–µ—Ä. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ, —è –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –ª–∏—á–Ω–æ ‚òÄ",
                                            reply_markup=back2_to_menu_kb())
    elif row[4] == "–ö–∞—Ä—Ç–∏–Ω–∞":
        await db_order.add_material_db(callback.from_user.id, "–ö–∞—Ä—Ç–∏–Ω–∞")
        await state.set_state(DescripState.edit)
        await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç–∏–Ω—ã. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ, —è –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –ª–∏—á–Ω–æ üå∏",
                                            reply_markup=back2_to_menu_kb())
    elif row[4] == "–ó–Ω–∞—á–æ–∫":
        await db_order.add_material_db(callback.from_user.id, "–ó–Ω–∞—á–æ–∫")
        await state.set_state(DescripState.edit)
        await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –û–î–ù–û–ú —Å–æ–æ–±—â–µ–Ω–∏–∏ –∫–∞–∫–∏–º –ª–∞–∫–æ–º –ø–æ–∫—Ä—ã–≤–∞—Ç—å –∑–Ω–∞—á–æ–∫:\n"
                                            "<b>–≥–ª—è–Ω—Ü–µ–≤—ã–º</b> (—Ü–≤–µ—Ç–∞ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —è—Ä—á–µ, –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –æ—Ç—Ä–∞–∂–∞—é—â–µ–π)\n"
                                            "<b>–º–∞—Ç–æ–≤—ã–º</b> (–≤–∏–∑—É–∞–ª—å–Ω–æ –Ω–∏–∫–∞–∫ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è, –ø—Ä–æ—Å—Ç–æ –∫–∞–∫ –∑–∞—â–∏—Ç–Ω—ã–π —Å–ª–æ–π)\n"
                                            "–ª–∏–±–æ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ –ø–æ–∫–∞ <b>–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å</b>",
                                            reply_markup=back2_to_menu_kb())
    await callback.answer()

# Country edit
@router.callback_query(F.data == "country_edit")
async def edit_country(callback: CallbackQuery) -> None:
    await callback.message.answer("–í –∫–∞–∫—É—é —Å—Ç—Ä–∞–Ω—É –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∞?\n\n"
                     "*–≤ –¥—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã, –∫—Ä–æ–º–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–æ—Å—Ç–∞–≤–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞",
                     reply_markup=edit_country_kb())
    await callback.answer()

@router.callback_query(F.data == "russia_edit")
async def russia(callback: CallbackQuery) -> None:
    await db_order.add_country_db(callback.from_user.id, "–†–æ—Å—Å–∏—è")
    await callback.message.answer("–£–∫–∞–∂–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏", reply_markup=edit_russia_delivery_kb())
    await callback.answer()

@router.callback_query(F.data == "spb_edit")
async def russia(callback: CallbackQuery) -> None:
    await db_order.add_city_db(callback.from_user.id, "–°–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞")
    await callback.message.answer("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã!", reply_markup=get_data_kb())
    await callback.answer()

@router.callback_query(F.data == "russia_delivery_edit")
async def russia(callback: CallbackQuery, state: FSMContext) -> None:
    await db_order.add_delivery_db(callback.from_user.id, "200 - 400 —Ä—É–±.")
    await state.set_state(CityState.edit)
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                                  "–ì–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞, –∏–Ω–¥–µ–∫—Å\n\n"
                                  "*–æ—Ç–ø—Ä–∞–≤–ª—è—é –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏, —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ 200-400—Ä", reply_markup=back2_to_menu_kb())
    await callback.answer()

@router.callback_query(F.data == "belarus_edit")
async def belarus(callback: CallbackQuery, state: FSMContext) -> None:
    await db_order.add_country_db(callback.from_user.id, "–ë–µ–ª–∞—Ä—É—Å—å")
    await db_order.add_delivery_db(callback.from_user.id, "–æ—Ç 600 —Ä—É–±.")
    await state.set_state(CityState.edit)
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                                  "–ì–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞, –∏–Ω–¥–µ–∫—Å\n\n"
                                  "*–æ—Ç–ø—Ä–∞–≤–ª—è—é –°–¥—ç–∫–æ–º –∏–ª–∏ –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏, —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç 600—Ä",
                                  reply_markup=back2_to_menu_kb())
    await callback.answer()

@router.callback_query(F.data == "kz_edit")
async def kz(callback: CallbackQuery, state: FSMContext) -> None:
    await db_order.add_country_db(callback.from_user.id, "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω")
    await db_order.add_delivery_db(callback.from_user.id, "–æ—Ç 600 —Ä—É–±.")
    await state.set_state(CityState.edit)
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                                  "–ì–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞, –∏–Ω–¥–µ–∫—Å\n\n"
                                  "*–æ—Ç–ø—Ä–∞–≤–ª—è—é –°–¥—ç–∫–æ–º –∏–ª–∏ –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏, —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç 600—Ä",
                                  reply_markup=back2_to_menu_kb())
    await callback.answer()

# Fullname edit
@router.callback_query(F.data == "fullname_edit")
async def edit_fullname(callback: CallbackQuery, state: FSMContext) -> None:
    await state.set_state(FullNameState.edit)
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ —Ñ–∞–º–∏–ª–∏—é, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ", reply_markup=back2_to_menu_kb())
    await callback.answer()

# Number edit
@router.callback_query(F.data == "number_edit")
async def edit_fullname(callback: CallbackQuery, state: FSMContext) -> None:
    await state.set_state(NumberState.edit)
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", reply_markup=back2_to_menu_kb())
    await callback.answer()
